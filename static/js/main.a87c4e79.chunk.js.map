{"version":3,"sources":["firebase-config.js","pages/Home.js","pages/AddEdit.js","pages/View.js","pages/About.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","database","getDatabase","Home","props","useState","data","setData","count","setCount","useHistory","useEffect","dbRef","ref","get","child","then","snapshot","exists","console","log","val","catch","error","style","marginTop","className","textAlign","Object","keys","map","id","index","scope","name","email","contact","to","onClick","window","confirm","remove","toast","success","onDelete","AddEdit","initialState","state","setState","history","useParams","handleInputChange","event","target","value","margin","padding","maxWidth","alignContent","onSubmit","e","preventDefault","tid","set","err","Math","floor","random","setTimeout","push","htmlFor","type","placeholder","onChange","View","user","setUser","About","Header","activeTab","setActiveTab","location","useLocation","pathname","App","position","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a87c4e79.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {getDatabase} from 'firebase/database';\n\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAnRhnbdA3Eh0Zr4fc1V_Vokr4E_Dv5S8A',\n  authDomain: 'contact-firebase-de467.firebaseapp.com',\n  projectId: 'contact-firebase-de467',\n  storageBucket: 'contact-firebase-de467.appspot.com',\n  messagingSenderId: '614685628933',\n  appId: '1:614685628933:web:57f7bb40101a1d015c1a6c',\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const database = getDatabase(app);\n\n","import React, { useState, useEffect } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport './Home.css';\nimport { getDatabase, ref, child, get, remove } from 'firebase/database';\nimport { database } from '../firebase-config';\nimport { toast } from 'react-toastify';\n\nimport { useHistory, useParam } from 'react-router-dom';\nfunction Home(props) {\n  const [data, setData] = useState({});\n\n  const [count,setCount] = useState(0);\n  const history = useHistory();\n\n  useEffect(() => {\n    const dbRef = ref(database);\n\n    get(child(dbRef, `contacts`))\n      .then((snapshot) => {\n        if (snapshot.exists()) {\n          console.log(snapshot.val());\n          setData({ ...snapshot.val() });\n        } else {\n          console.log('No data available');\n          setData({});\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    return () => {\n      setData({});\n    };\n  }, [count]);\n\n  const onDelete = (id) => {\n    const dbRef = ref(database);\n    if (window.confirm('Are you sure that you wanted to delete that contact?')) {\n        remove(child(dbRef,`/contacts/${id}`))\n        toast.success('Contact removed successfully');\n        setCount(1);\n    }\n  };\n\n  console.log('data', data);\n  return (\n    <div style={{ marginTop: '100px' }}>\n      <table className=\"styled-table\">\n        <thead>\n          <tr>\n            <th style={{ textAlign: 'center' }}>No.</th>\n            <th style={{ textAlign: 'center' }}>Name</th>\n            <th style={{ textAlign: 'center' }}>Email</th>\n            <th style={{ textAlign: 'center' }}>Contact</th>\n            <th style={{ textAlign: 'center' }}>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(data).map((id, index) => {\n            return (\n              <tr key={id}>\n                <th scope=\"row\">{index + 1}</th>\n                <td>{data[id].name}</td>\n                <td>{data[id].email}</td>\n                <td>{data[id].contact}</td>\n                <td>\n                  <Link to={`/update/${id}`}>\n                    <button className=\"btn btn-edit\">Edit</button>\n                  </Link>\n                  <button\n                    className=\"btn btn-delete\"\n                    onClick={() => {\n                      onDelete(id);\n                    }}\n                  >\n                    Delete\n                  </button>\n                  <Link to={`/view/${id}`}>\n                    <button className=\"btn btn-view\">View</button>\n                  </Link>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n// import { useParams } from \"react-router\";\nimport './AddEdit.css';\n\nimport { toast } from 'react-toastify';\n\nimport { getDatabase, ref, set, get, child } from 'firebase/database';\n\nimport { database } from '../firebase-config';\n\nfunction AddEdit(props) {\n  const initialState = {\n    id: '',\n    name: '',\n    email: '',\n    contact: '',\n  };\n  const [state, setState] = useState(initialState);\n  const [data, setData] = useState({});\n  const { name, email, contact } = state;\n\n  const history = useHistory();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const dbRef = ref(database);\n\n    get(child(dbRef, `contacts`))\n      .then((snapshot) => {\n        if (snapshot.exists()) {\n          console.log(\"addEdit snapshot\",snapshot.val());\n          setData({ ...snapshot.val() });\n        } else {\n          console.log('No data available');\n          setData({});\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    return () => {\n      setData({});\n    };\n  }, [id]);\n\n  useEffect(() => {\n    if (id) {\n      setState({ ...data[id] });\n    } else {\n      setState({ ...initialState });\n    }\n    return () => {\n      setState({ ...initialState });\n    };\n  }, [id, data]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!name || !email || !contact) {\n      toast.error('Please fill the required fields');\n    } else {\n      if (!id) {\n        const tid = Math.floor(Math.random() * 1000) + 1;\n        set(ref(database, 'contacts/' + tid), {\n          id: tid,\n          name: name,\n          email: email,\n          contact: contact,\n        }).catch((err) => {\n          toast.error(err);\n        });\n        toast.success('Contact added successfully!');\n      } else {\n        const tid = id;\n        set(ref(database, 'contacts/' + tid), {\n          //   id: tid,\n          //   name: name,\n          //   email: email,\n          //   contact: contact,\n          ...state,\n        }).catch((err) => {\n          toast.error(err);\n        });\n        toast.success('Contact Updated successfully!');\n      }\n\n      setTimeout(() => history.push('/'), 500);\n    }\n  };\n\n  const handleInputChange = (event) => {\n    console.log('event', event);\n    const { name, value } = event.target;\n    setState({ ...state, [name]: value });\n  };\n  console.log('state', state);\n\n  return (\n    <div style={{ marginTop: '100px' }}>\n      <form\n        style={{\n          margin: 'auto',\n          padding: '15px',\n          maxWidth: '400px',\n          alignContent: 'center',\n        }}\n        onSubmit={handleSubmit}\n      >\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          value={name || ''}\n          onChange={handleInputChange}\n        />\n        <label htmlFor=\"name\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          value={email || ''}\n          onChange={handleInputChange}\n        />\n        <label htmlFor=\"contact\">Contact</label>\n        <input\n          type=\"number\"\n          id=\"contact\"\n          name=\"contact\"\n          placeholder=\"Your contact\"\n          value={contact || ''}\n          onChange={handleInputChange}\n        />\n        <input type=\"submit\" value={id ? 'Update' : 'Save'} />\n      </form>\n    </div>\n  );\n}\n\nexport default AddEdit;\n","import React, { useState, useEffect } from 'react';\n\nimport { getDatabase, ref, child, get, } from 'firebase/database';\nimport { database } from '../firebase-config';\n\nimport { useParams, Link } from 'react-router-dom';\n\nimport './View.css';\n\nfunction View(props) {\n  const [user, setUser] = useState({});\n  const { id } = useParams();\n\n  useEffect(() => {\n    const dbRef = ref(database);\n\n    get(child(dbRef, `contacts/${id}`))\n      .then((snapshot) => {\n        if (snapshot.exists()) {\n          console.log('viewdata snapshot', snapshot.val());\n          setUser({ ...snapshot.val() });\n        } else {\n          console.log('No data available');\n          setUser({});\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    return () => {\n      setUser({});\n    };\n  }, [id]);\n\n  return (\n    <div>\n      <div style={{ marginTop: '150px' }}>\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <p>User Contact Detail</p>\n          </div>\n          <div className=\"container\">\n            <strong>ID:</strong>\n            <span>{id}</span>\n            <br />\n            <br />\n            <strong>Name:</strong>\n            <span>{user.name}</span>\n            <br />\n            <br />\n            <strong>Email:</strong>\n            <span>{user.email}</span>\n            <br />\n            <br />\n            <strong>Contact:</strong>\n            <span>{user.contact}</span>\n            <br />\n            <br />\n            <Link to=\"/\">\n                <button className=\"btn btn-edit\">Go Back</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default View;\n","import React from 'react';\n\nfunction About(props) {\n    return (\n        <div style={{marginTop:\"150px\"}}>\n            <h1>This is React Contact Management System Application with Routing using Firebase</h1>\n        </div>\n    );\n}\n\nexport default About;","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './Header.css';\n\nfunction Header(props) {\n  const [activeTab, setActiveTab] = useState('Home');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (location.pathname === '/') {\n      setActiveTab('Home');\n    } else if (location.pathname === '/add') {\n      setActiveTab('AddContact');\n    } else if (location.pathname === '/about') {\n      setActiveTab('About');\n    }\n  }, [location]);\n  return (\n    <div className=\"header\">\n      <p className=\"logo\">Contact App</p>\n      <div className=\"header-right\">\n        <Link to=\"/\">\n          <p\n            className={`${activeTab === 'Home' ? 'active' : ''} `}\n            onClick={() => setActiveTab('Home')}\n          >\n            Home\n          </p>\n        </Link>\n        <Link to=\"/add\">\n          <p\n            className={`${activeTab === 'AddContact' ? 'active' : ''} `}\n            onClick={() => setActiveTab('AddContact')}\n          >\n            Add contact\n          </p>\n        </Link>\n        <Link to=\"/about\">\n          <p\n            className={`${activeTab === 'About' ? 'active' : ''} `}\n            onClick={() => setActiveTab('About')}\n          >\n            About\n          </p>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import './App.css';\nimport React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport AddEdit from './pages/AddEdit';\nimport View from './pages/View';\nimport About from './pages/About';\nimport Header from './components/Header';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <ToastContainer position=\"top-center\" />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/add\" component={AddEdit} />\n          <Route path=\"/update/:id\" component={AddEdit} />\n          <Route path=\"/view/:id\" component={View} />\n          <Route path=\"/about\" component={About} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}